// Package swagger GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "PufferPanel",
            "url": "https://pufferpanel.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/config": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": [
                            "none"
                        ]
                    }
                ],
                "description": "Gets the editable config entries for the panel",
                "summary": "Get config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EditableConfigSettings"
                        }
                    }
                }
            }
        },
        "/api/nodes": {
            "get": {
                "description": "Gets all nodes registered to the panel",
                "summary": "Get nodes",
                "responses": {
                    "200": {
                        "description": "Nodes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a node",
                "summary": "Create node",
                "responses": {
                    "200": {
                        "description": "Node created",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/nodes/{id}": {
            "get": {
                "description": "Gets information about a single node",
                "summary": "Get node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodes",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a node with given information",
                "summary": "Update node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node information",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the node",
                "summary": "Deletes a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/nodes/{id}/deployment": {
            "get": {
                "description": "Gets the secret information needed to deploy a node.",
                "summary": "Gets the data to deploy a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NodeDeploymentConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/nodes/{id}/features": {
            "get": {
                "description": "Gets the environments and if docker is supported on a node",
                "summary": "Gets the features a node supports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Features"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/self": {
            "get": {
                "description": "Gets the user information of the current user",
                "summary": "Get your user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user information for your current user",
                "summary": "Update your user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/self/oauth2": {
            "get": {
                "description": "Gets known OAuth2 clients the logged-in user has registered",
                "summary": "Gets registered OAuth2 clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create an account-level OAuth2 client",
                "parameters": [
                    {
                        "description": "Information for the client to create",
                        "name": "client",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreatedClient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/self/oauth2/{id}": {
            "delete": {
                "summary": "Deletes an account-level OAuth2 client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Information for the client to create",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers": {
            "get": {
                "description": "Gets servers, and allowing for filtering of servers. * is a wildcard that can be used for text inputs",
                "summary": "Search servers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to filter on, default is current user if NOT admin",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Node ID to filter on",
                        "name": "node",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of server to filter on",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "What page to get back for many results",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerSearchResults"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}": {
            "put": {
                "description": "Creates a server",
                "summary": "Create server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Creation information",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatedServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreatedServerId"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a server from the panel",
                "summary": "Deletes a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/definition": {
            "get": {
                "description": "Gets a particular server",
                "summary": "Get a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetServer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/name": {
            "post": {
                "description": "Renames a server",
                "summary": "Rename server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New server name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/oauth2": {
            "get": {
                "summary": "Gets server-level OAuth2 credentials for the logged in user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates server-level OAuth2 credentials for the logged in user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client to create",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreatedClient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/oauth2/{clientId}": {
            "delete": {
                "summary": "Deletes server-level OAuth2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/user": {
            "get": {
                "summary": "Gets all users for a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Permissions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/servers/{id}/users/{email}": {
            "put": {
                "summary": "Edits access to a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email of user",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New permissions to apply",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permissions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Removes access to a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email of user",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/settings": {
            "post": {
                "description": "Updates multiple panel settings at once",
                "summary": "Update multiple panel setting",
                "parameters": [
                    {
                        "description": "Config data to apply",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeMultipleSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/settings/{key}": {
            "get": {
                "description": "Gets the value currently being used for the specified config key",
                "summary": "Value a panel setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the value of a panel setting",
                "summary": "Update a panel setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new value for the setting",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/templates": {
            "get": {
                "description": "Gets all repos that are available to pull template from",
                "summary": "Get all repos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateRepo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/templates/local/{name}": {
            "put": {
                "summary": "Adds or updates a template",
                "parameters": [
                    {
                        "description": "Template",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerDefinition"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes template",
                "summary": "Deletes template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/templates/{repo}": {
            "get": {
                "description": "Gets all templates from a repository",
                "summary": "Get all templates from repo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repo name",
                        "name": "repo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Template"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/templates/{repo}/{template}": {
            "get": {
                "description": "Gets a template from the repo",
                "summary": "Get template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repo name",
                        "name": "repo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Gets users, and allowing for filtering of users. * is a wildcard that can be used for text inputs",
                "summary": "Get users",
                "parameters": [
                    {
                        "description": "Filters to search on",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "New user information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New user information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}/perms": {
            "get": {
                "summary": "Gets user permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Permissions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "summary": "Sets user permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New permissions",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permissions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/usersettings": {
            "get": {
                "description": "Gets all settings specific to the current user",
                "summary": "Get a user setting",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSettings"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/usersettings/{key}": {
            "put": {
                "description": "Updates the value of a user setting",
                "summary": "Update a user setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new value for the setting",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSetting"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/daemon": {
            "get": {
                "description": "Check to see if the daemon is online or not",
                "summary": "Check daemon status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DaemonRunning"
                        }
                    }
                }
            },
            "head": {
                "description": "Check to see if the daemon is online or not",
                "summary": "Check daemon status",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/oauth2/introspect": {
            "post": {
                "description": "Get information about an OAuth2 token",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "summary": "Get info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth2 token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hint for how the token might be used",
                        "name": "token_type_hint",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OAuth2TokenInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/OAuth2ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/OAuth2ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "description": "Get a OAuth2 token to consume this API",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "summary": "Authenticate",
                "parameters": [
                    {
                        "description": "OAuth2 token request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OAuth2TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OAuth2TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/OAuth2ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/OAuth2ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/OAuth2ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BrandingConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "ChangeMultipleSettings": {
            "type": "object",
            "additionalProperties": true
        },
        "Client": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CreatedClient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "CreatedServer": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Variable"
                    }
                },
                "display": {
                    "type": "string"
                },
                "environment": {},
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Group"
                    }
                },
                "id": {
                    "type": "string"
                },
                "install": {
                    "type": "array",
                    "items": {}
                },
                "name": {
                    "type": "string"
                },
                "node": {
                    "type": "integer"
                },
                "requirements": {
                    "$ref": "#/definitions/Requirements"
                },
                "run": {
                    "$ref": "#/definitions/Execution"
                },
                "supportedEnvironments": {},
                "type": {
                    "type": "string"
                },
                "uninstall": {
                    "type": "array",
                    "items": {}
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CreatedServerId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "DaemonRunning": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "EditableConfigSettings": {
            "type": "object",
            "properties": {
                "branding": {
                    "$ref": "#/definitions/BrandingConfig"
                },
                "registrationEnabled": {
                    "type": "boolean"
                },
                "themes": {
                    "$ref": "#/definitions/ThemeConfig"
                }
            }
        },
        "Empty": {
            "type": "object"
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/Error"
                }
            }
        },
        "Execution": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autorecover": {
                    "type": "boolean"
                },
                "autorestart": {
                    "type": "boolean"
                },
                "autostart": {
                    "type": "boolean"
                },
                "command": {},
                "disabled": {
                    "type": "boolean"
                },
                "environmentVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "post": {
                    "type": "array",
                    "items": {}
                },
                "pre": {
                    "type": "array",
                    "items": {}
                },
                "program": {
                    "type": "string"
                },
                "stop": {
                    "type": "string"
                },
                "stopCode": {
                    "type": "integer"
                },
                "workingDirectory": {
                    "type": "string"
                }
            }
        },
        "Features": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "GetServer": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                },
                "server": {
                    "$ref": "#/definitions/ServerInfo"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "string": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Name": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isLocal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "privateHost": {
                    "type": "string"
                },
                "privatePort": {
                    "type": "integer"
                },
                "publicHost": {
                    "type": "string"
                },
                "publicPort": {
                    "type": "integer"
                },
                "sftpPort": {
                    "type": "integer"
                }
            }
        },
        "NodeDeploymentConfig": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "OAuth2ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "OAuth2TokenInfoResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "OAuth2TokenRequest": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "grantType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "OAuth2TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "Paging": {
            "type": "object",
            "properties": {
                "maxSize": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "Permissions": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "createServers": {
                    "type": "boolean"
                },
                "deleteServers": {
                    "type": "boolean"
                },
                "deployNodes": {
                    "type": "boolean"
                },
                "editNodes": {
                    "type": "boolean"
                },
                "editServerAdmin": {
                    "type": "boolean"
                },
                "editServerData": {
                    "type": "boolean"
                },
                "editServerUsers": {
                    "type": "boolean"
                },
                "editTemplates": {
                    "type": "boolean"
                },
                "editUsers": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "installServer": {
                    "type": "boolean"
                },
                "panelSettings": {
                    "type": "boolean"
                },
                "putServerFiles": {
                    "type": "boolean"
                },
                "sendServerConsole": {
                    "type": "boolean"
                },
                "serverIdentifier": {
                    "type": "string"
                },
                "sftpServer": {
                    "type": "boolean"
                },
                "startServer": {
                    "type": "boolean"
                },
                "stopServer": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "viewNodes": {
                    "type": "boolean"
                },
                "viewServerConsole": {
                    "type": "boolean"
                },
                "viewServerFiles": {
                    "type": "boolean"
                },
                "viewServerStats": {
                    "type": "boolean"
                },
                "viewServers": {
                    "type": "boolean"
                },
                "viewTemplates": {
                    "type": "boolean"
                },
                "viewUsers": {
                    "type": "boolean"
                }
            }
        },
        "Requirements": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "binaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "ServerDefinition": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Variable"
                    }
                },
                "display": {
                    "type": "string"
                },
                "environment": {},
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Group"
                    }
                },
                "id": {
                    "type": "string"
                },
                "install": {
                    "type": "array",
                    "items": {}
                },
                "requirements": {
                    "$ref": "#/definitions/Requirements"
                },
                "run": {
                    "$ref": "#/definitions/Execution"
                },
                "supportedEnvironments": {},
                "type": {
                    "type": "string"
                },
                "uninstall": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "ServerInfo": {
            "type": "object",
            "properties": {
                "data": {},
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "node": {
                    "$ref": "#/definitions/Node"
                },
                "nodeId": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServerUser"
                    }
                }
            }
        },
        "ServerSearchResults": {
            "type": "object",
            "properties": {
                "paging": {
                    "$ref": "#/definitions/Paging"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServerInfo"
                    }
                }
            }
        },
        "ServerUser": {
            "type": "object",
            "properties": {
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "value": {}
            }
        },
        "Template": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Variable"
                    }
                },
                "display": {
                    "type": "string"
                },
                "environment": {},
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Group"
                    }
                },
                "id": {
                    "type": "string"
                },
                "install": {
                    "type": "array",
                    "items": {}
                },
                "name": {
                    "type": "string"
                },
                "readme": {
                    "type": "string"
                },
                "requirements": {
                    "$ref": "#/definitions/Requirements"
                },
                "run": {
                    "$ref": "#/definitions/Execution"
                },
                "supportedEnvironments": {},
                "type": {
                    "type": "string"
                },
                "uninstall": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "TemplateRepo": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ThemeConfig": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "available": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settings": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "newPassword": {
                    "type": "string"
                },
                "password": {
                    "description": "ONLY SHOW WHEN COPYING",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UserSearch": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageLimit": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UserSearchResponse": {
            "type": "object",
            "properties": {
                "paging": {
                    "$ref": "#/definitions/Paging"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "UserSetting": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "UserSettings": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Variable": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableOption"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "userEdit": {
                    "type": "boolean"
                },
                "value": {}
            }
        },
        "VariableOption": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "string"
                },
                "value": {}
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "/oauth2/token",
            "scopes": {
                "nodes.deploy": " Allows getting the config of a node for deployment",
                "nodes.edit": " Allows editing of node connection information",
                "nodes.view": " Allows viewing nodes",
                "none": " No scope needed",
                "oauth2.auth": " Scope to validate another OAuth2 credential",
                "panel.settings": " Allows for viewing and editing of panel settings",
                "servers.admin": " Admin access to all servers",
                "servers.console": " Allows viewing the console of a server",
                "servers.console.send": " Allows sending commands to a server's console",
                "servers.create": " Allows creating servers",
                "servers.delete": " Allows deleting servers",
                "servers.edit": " Allows full editing of a server",
                "servers.edit.admin": " Allows admin-level editing of a server",
                "servers.edit.users": " Allows user-level editing of a server",
                "servers.files.get": " Allows viewing and downloading files for a server through the File Manager",
                "servers.files.put": " Allows editing files for a server through the File Manager",
                "servers.install": " Allows using the \"Install\" button for a server",
                "servers.sftp": " Allows connection to a server over SFTP",
                "servers.start": " Allow starting a server",
                "servers.stats": " Allows getting stats of a server like CPU and memory usage",
                "servers.stop": " Allows stopping a server",
                "servers.update": " Allows using the \"Update\" button for a server",
                "servers.view": " View servers (only gives basic view)",
                "templates.edit": " Allows editing of templates",
                "templates.view": " Allows viewing templates",
                "users.edit": " Allows editing of all users",
                "users.view": " Allows viewing all registered users"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "PufferPanel API",
	Description:      "### Data format\r\n\r\nThe API works off of the JSON spec. Most of the API expects and returns JSON data. There is no support to change the data format used.\r\n\r\n### Successful calls\r\n\r\nSuccessful calls will be any result which produce a 2xx result. This can include 200 (OK), 202 (Accepted), or 204 (No Content). The API will document which status code is returned. \r\n\r\n### User errors\r\n\r\nClient errors are a result which stems from a bad user request, whether it's a bad URL or bad data. These will be a 400 (Bad Request), 401 (Unauthorized), 403 (Forbidden), or 404 (Not Found). \r\n\r\n`400`: Refer to the HTTP body for why the call failed.\r\n\r\n`401`: Refer to the [Authentication session](#authentication) for information on how to authenticate. \r\n\r\n`403`: Your authorization does not permit accessing this resource. Please check the credentials you are using.\r\n\r\n`404`: The URL you are calling does not exist. Please check the full URL.\r\n\r\n### Server errors\r\n\r\nA 500 may be returned, indicating something went wrong with thr request. This generally indicates something is not as expected, but your request was valid. Please refer to the panel logs and try your request again.\r\n\r\nErrors will be returned in the following JSON structure:\r\n```json\r\n{\r\n  \"msg\": \"A human-legible error message, with optional metadata to fill in the message more, such as 'Hello {foo}' would be 'Hello World'\",\r\n  \"code\": \"ErrMachineGoBrr\",\r\n  \"metadata\": {\r\n    \"foo\": \"World\"\r\n  }\r\n}\r\n```\r\n\r\n### Authentication\r\n\r\nPufferPanel uses the OAuth2 standard to handle both authentication and authorization of resources. To access the API, a user must first register an OAuth2 client within the panel. A client may be registered within a server's settings, which grants the client only to that server, or to the account, which grants the client access as though it was that user.\r\n\r\nTo authenticate, refer to the docs specified in the [/oauth2/token](#/default/post_oauth2_token) endpoint on how to request your access token. This follows the OAuth2 spec, which you may read about here: https://oauth.net/2/grant-types/client-credentials/\r\n\r\nOnce you have a token, you pass the following Header to all API calls. `Authorization: Bearer <token>`\r\n\r\nFailure to pass this token when calling the API will result in a 403.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
